version: "3.3"

networks:
  api_microservice:
    ipam:
      driver: default
      config:
        - subnet: "172.20.0.0/16"

services:

  nestjs-gateway:
    container_name: nestjs-gateway
    hostname: nestjs-gateway
    restart: always
    build:
      context: ./gateway
    depends_on:
      - redis
      - mongodb
    ports:
      - "3000:3000"
    networks:
      api_microservice:
        ipv4_address: 172.20.100.2

  redis:
    container_name: redis
    hostname: redis
    image: redis:7.0-alpine
    restart: always
    ports:
      - "6379:6379"
    command: [ "redis-server", "--bind", "redis", "--port", "6379" ]
    networks:
      api_microservice:
        ipv4_address: 172.20.100.3

  nestjs-user-service:
    container_name: nestjs-user-service
    hostname: nestjs-user-serice
    restart: always
    build:
      context: ./user-service
    depends_on:
      - redis
      - mongodb
    ports:
      - "4001:4001"
    networks:
      api_microservice:
        ipv4_address: 172.20.100.4

  nestjs-book-service:
    container_name: nestjs-book-service
    hostname: nestjs-book-serice
    restart: always
    build:
      context: ./book-service
    depends_on:
      - redis
      - mongodb
    ports:
      - "4002:4002"
    networks:
      api_microservice:
        ipv4_address: 172.20.100.5

  mongodb:
    container_name: mongodb
    build:
      context: ./mongodb
    restart: always
    ports:
      - "27017:27017"
    networks:
      api_microservice:
        ipv4_address: 172.20.100.10


  # For log redis

  # redis-commander:
  #   container_name: redis-commander
  #   hostname: redis-commander
  #   image: rediscommander/redis-commander:latest
  #   restart: always
  #   environment:
  #     - REDIS_HOSTS=local:redis:6379
  #   ports:
  #     - "8081:8081"
